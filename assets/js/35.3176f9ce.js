(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{334:function(_,v,t){"use strict";t.r(v);var s=t(4),r=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"计算机网络篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络篇"}},[_._v("#")]),_._v(" "),v("strong",[_._v("计算机网络篇")])]),_._v(" "),v("blockquote",[v("p",[_._v("下面是作者对于"),v("strong",[_._v("计算机网络")]),_._v("知识点一些总结（对于"),v("strong",[_._v("期末复习、保研和考研")]),_._v("均适用，对找工作的同学也有一定参考作用。")])]),_._v(" "),v("h3",{attrs:{id:"_1-介绍一下-osi-七层模型各层之间的功能与对应的协议-★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍一下-osi-七层模型各层之间的功能与对应的协议-★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("1. 介绍一下 OSI 七层模型各层之间的功能与对应的协议？★★★★★")])])]),_._v(" "),v("p",[_._v("OSI 七层模型自顶向下分别为：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。")]),_._v(" "),v("p",[_._v("（1）应用层：为应用程序提供服务。主要的协议有：FTP、SMTP、HTTP、DNS。")]),_._v(" "),v("p",[_._v("（2）表示层：表示层负责数据的格式转换、加密、解密和压缩等。常见协议有 JPEG、ASCII 等。")]),_._v(" "),v("p",[_._v("（3）会话层：建立或解除与其他节点的联系")]),_._v(" "),v("p",[_._v("（4）传输层：提供端到端的可靠数据传输服务，还提供可靠传输、差错检测、流量控制和拥塞控制等功能。主要的协议有：TCP、UDP 协议等。")]),_._v(" "),v("p",[_._v("（5）网络层：负责进行数据包的路由选择和分组转发，确保数据可以从源主机传输到目标主机。向上提供简单的、无连接的、尽最大努力的交付的服务。主要的协议有：IP、ICMP、IGMP、RIP、OSPF 协议等。")]),_._v(" "),v("p",[_._v("（6）数据链路层：提供点到点的可靠数据传输服务，将物理层提供的原始比特流封装成帧。它还提供了错误检测和纠正机制。常见协议有以太网（Ethernet）、Wi-Fi（802.11）、PPP、CSMA/CD 协议等。")]),_._v(" "),v("p",[_._v("（7）物理层：屏蔽传输媒体以及通信手段的差异，只关注如何在物理介质上传输二进制数据，主要协议有 IEEE 802 等。")]),_._v(" "),v("h3",{attrs:{id:"_2-计算机网络为什么-要分层-分层的优点是什么-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-计算机网络为什么-要分层-分层的优点是什么-★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("2. 计算机网络为什么********要分层？分层的优点是什么？★★")])])]),_._v(" "),v("p",[_._v("由于"),v("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&spm=1001.2101.3001.7020",title:"计算机网络",target:"_blank",rel:"noopener noreferrer"}},[_._v("计算机网络"),v("OutboundLink")],1),_._v("是一个复杂而且大的系统，分层主要是利用分而治之的思想，将大的问题分解为若干个更小的子问题，从而将复杂问题简单化。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("分层的主要优点有：")])])]),_._v(" "),v("p",[_._v("（1）各层之间相互独立：每层只需要用合适的技术解决独立的问题，并不关心相邻层之间的实现，只是接受下层提供的服务，并为上层提供服务，降低问题复杂度；")]),_._v(" "),v("p",[_._v("（2）灵活性好：当任何一层发生变化时，只要保持各层接口不变，则对某一层的修改将不影响相邻层间的功能实现；")]),_._v(" "),v("p",[_._v("（3）结构上可分割：每层都可以采用最合适的技术来实现该层的功能；")]),_._v(" "),v("p",[_._v("（4）易于实现和维护；")]),_._v(" "),v("p",[_._v("（5）促进标准化工作：每层之间有明确的功能与服务。")]),_._v(" "),v("h3",{attrs:{id:"_3-协议的三要素是什么-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-协议的三要素是什么-★★"}},[_._v("#")]),_._v(" 3. "),v("strong",[v("strong",[_._v("协议的三要素是什么？★★")])])]),_._v(" "),v("p",[_._v("（1）语法：规定传输数据的格式。")]),_._v(" "),v("p",[_._v("（2）语义：规定所要完成的功能。")]),_._v(" "),v("p",[_._v("（3）同步：规定各种操作的顺序。")]),_._v(" "),v("h3",{attrs:{id:"_4-电路交换、报文交换、分组交换的技术特点。★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-电路交换、报文交换、分组交换的技术特点。★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("4. 电路交换、报文交换、分组交换的技术特点。★★★")])])]),_._v(" "),v("p",[v("strong",[_._v("（1）****电")]),_._v("路交换：****")]),_._v(" "),v("p",[_._v("定义：传输前，必须建立一条专用的物理通信路径，一直被独占，结束后才释放。")]),_._v(" "),v("p",[_._v("优点：通信时延小，实时性好；有序传输；没有冲突；控制简单；适用范围广。")]),_._v(" "),v("p",[_._v("缺点：建立连接时间长；线路使用效率低；灵活性差；控制简单。")]),_._v(" "),v("p",[v("strong",[_._v("（2）"),v("strong",[_._v("报文交换：")])])]),_._v(" "),v("p",[_._v("定义：数据交换的单位是报文，采用存储转发方式。")]),_._v(" "),v("p",[_._v("优点：无须建立连接；动态分配线路；提高线路可靠性；利用率高；提供多目标服务。")]),_._v(" "),v("p",[_._v("缺点：存储转发时延打；较大的缓存空间。")]),_._v(" "),v("p",[v("strong",[_._v("（3）分组交换：")])]),_._v(" "),v("p",[_._v("定义：采用存储转发，限制每次传送数据块大小上限，加上一些控制信息，构成分组")]),_._v(" "),v("p",[_._v("优点：没有建立时延；线路利用率高；简化了存储管理；并行加速传输；减少出错几率和重发数据量。")]),_._v(" "),v("p",[_._v("缺点：存在传输时延；需要传输额外的信息量；采用数据报服务，出现失序、丢失、重复分组。")]),_._v(" "),v("h3",{attrs:{id:"_5-mac-地址、ip-地址、域名分别在哪一层-有什么作用-用哪些协议建立这些地址的映射。★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-mac-地址、ip-地址、域名分别在哪一层-有什么作用-用哪些协议建立这些地址的映射。★★★"}},[_._v("#")]),_._v(" 5**.** "),v("strong",[v("strong",[_._v("MAC 地址、IP 地址、域名分别在哪一层，有什么作用，用哪些协议建立这些地址的映射。★★★")])])]),_._v(" "),v("p",[_._v("MAC 地址在数据链路层，IP 地址在网络层，域名在应用层。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("作用：")])])]),_._v(" "),v("p",[_._v("MAC 地址作用：区分网卡，这个地址不能改变。")]),_._v(" "),v("p",[_._v("IP 地址作用：区分用户，为每个用户对应一个 IP 地址。")]),_._v(" "),v("p",[_._v("域名：便于记住网站。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("映射：")])])]),_._v(" "),v("p",[_._v("IP 转 MAC 协议：ARP")]),_._v(" "),v("p",[_._v("MAC 转 IP 协议：RARP")]),_._v(" "),v("p",[_._v("域名转换成 IP：DNS")]),_._v(" "),v("h3",{attrs:{id:"_6-局域网中数据怎么传的-和-wifi-无线网中传播的区别。★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-局域网中数据怎么传的-和-wifi-无线网中传播的区别。★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("6. 局域网中数据怎么传的？和 WiFi 无线网中传播的区别。★★")])])]),_._v(" "),v("p",[_._v("局域网中的数据采用 CSMA/CD 协议。")]),_._v(" "),v("p",[_._v("WIFI 无线网中采用 CSMA/CA 协议。")]),_._v(" "),v("h3",{attrs:{id:"_7-简述一下-csma-cd-协议。★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-简述一下-csma-cd-协议。★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("7. 简述一下 CSMA/CD 协议。★★★★★")])])]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("CSMA/CD（载波监听多点接入 / 碰撞检测）协议的执行流程如下：")])])]),_._v(" "),v("p",[_._v("（1）在发送数据前需要监听信道。如果信道忙，则持续等待；如果信道空闲，则在等待一段细微时间后将开始传输数据；（载波监听，碰撞检测）")]),_._v(" "),v("p",[_._v("（2）在传输数据的过程中，一边传输一边监听信道是否发生碰撞。如果在争用期之内没有检测到碰撞，则说明已经独占信道，可以持续至完成发送；若在争用期内发生碰撞，则将停止数据发送，并发送一个拥塞信号；（边听边发，冲突停发）")]),_._v(" "),v("p",[_._v("（3）检测到发生碰撞后，适配器将执行二进制退避算法随机等待一段时间后，在进行数据发送。（截断二进制指数规避算法，随机重发）")]),_._v(" "),v("h3",{attrs:{id:"_8-简单介绍一下-http1-0-http3-0★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-简单介绍一下-http1-0-http3-0★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("8. 简单介绍一下 Http1.0~Http3.0★★★★★")])])]),_._v(" "),v("p",[_._v("HTTP1.0：（非持续性连接）")]),_._v(" "),v("p",[_._v("HTTP1.1：（持续性连接）（默认流水线）先来先服务（FCFS）")]),_._v(" "),v("p",[_._v("HTTP2：划分成帧，调度帧以减轻阻塞，根据优先级来传输数据而不是 FCFS")]),_._v(" "),v("p",[_._v("HTTP2 之前还是 TCP 服务，TCP 连接没有安全性；")]),_._v(" "),v("p",[_._v("HTTP3 是基于 QUIC 协议，出现了 UDP 服务，增加了安全性")]),_._v(" "),v("h3",{attrs:{id:"_9-简述一下与自治系统-as-相关的内部网关协议和外部网关协议-★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-简述一下与自治系统-as-相关的内部网关协议和外部网关协议-★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("9. 简述一下与自治系统 AS 相关的内部网关协议和外部网关协议？★★★★★")])])]),_._v(" "),v("p",[_._v("**   （1）内部网关协议 IGP**")]),_._v(" "),v("p",[_._v("指自治系统内部所使用的路由选择协议，一般有路由信息协议 RIP 和开放最短路径优先协议 OSPF。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("RIP：")])])]),_._v(" "),v("p",[_._v("RIP 协议是"),v("strong",[v("strong",[_._v("基于距离向量")])]),_._v("的路由选择协议。一条 RIP 路径最多包含 15 个路由器，当距离为 16 时表示不可达。该协议中路由器只和相邻路由器进行信息交换，交换的信息是路由表。它适用于小型网络，但在大型网络中存在收敛慢、更新频繁等缺点。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("OSPF：")])])]),_._v(" "),v("p",[_._v("OSPF 是一种"),v("strong",[v("strong",[_._v("基于链路状态")])]),_._v("的路由选择协议。协议中路由器发送的信息是相邻路由器的链路状态，并且使用洪泛法进行发送。最终，每个路由器都将建立一个链路状态数据库，即整个网路的拓扑结构。")]),_._v(" "),v("p",[v("strong",[_._v("（2）外部网关协议 EGP")])]),_._v(" "),v("p",[_._v("是指在不同自治系统之间交换信息的协议。例如 BGP 是一种 EGP。通常每个自治系统需要选择一个路由器作为 BGP 发言人，并且建立使用 TCP 连接，利用 BGP 会话交换路由信息。")]),_._v(" "),v("h3",{attrs:{id:"_10-为什么无线局域网不能使用-csma-cd-★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-为什么无线局域网不能使用-csma-cd-★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("10.")])]),_._v(" "),v("strong",[v("strong",[_._v("为什么无线局域网不能使用 CSMA/CD？★★★★")])])]),_._v(" "),v("p",[_._v("（1）无线信道特性：无线信道具有广播性质和随机性质，无法实现完全的碰撞检测。由于无线信道中存在传播延迟、多径效应、信号衰落等因素，无法准确检测到信号的冲突。与有线媒体不同，无线信道上的碰撞无法通过监听到碰撞信号来进行检测和处理。")]),_._v(" "),v("p",[_._v("（2）信号干扰：在无线局域网中，多个设备共享同一无线信道进行通信。由于无线信号的传播范围和干扰范围较大，相邻的无线设备发送信号时容易相互干扰，导致更多的碰撞发生。")]),_._v(" "),v("p",[_._v("（3）隐藏终端问题：无线局域网中存在隐藏终端问题，指的是即使在发送前进行了碰撞检测，但由于某些设备之间的距离较远或者受到障碍物的干扰，无法感知到对方的存在而导致碰撞。")]),_._v(" "),v("h3",{attrs:{id:"_11-简述流量控制、拥塞控制和可靠传输机制的原理。★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_11-简述流量控制、拥塞控制和可靠传输机制的原理。★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("11. 简述流量控制、拥塞控制和可靠传输机制的原理。★★★★★")])])]),_._v(" "),v("p",[v("strong",[_._v("（1）流量控制")])]),_._v(" "),v("p",[_._v("流量控制用于确保发送方与接收方之间的数据传输速率相匹配，以防止接收方无法及时处理大量的数据。")]),_._v(" "),v("p",[_._v("流量控制通过使用"),v("strong",[v("strong",[_._v("滑动窗口协议")])]),_._v("来实现。")]),_._v(" "),v("p",[_._v("发送方会根据接收方的接收能力和缓冲区的剩余空间来动态调整发送数据的速率。当接收方的缓冲区快满时，它会发送一个流量控制信号给发送方，告知发送方降低发送速率，以避免数据丢失或溢出。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("（2）拥塞控制")])])]),_._v(" "),v("p",[_._v("拥塞控制用于在网络中防止过多的数据流量导致网络拥塞。拥塞控制是一个端到端的过程，涉及到发送方、接收方以及中间设备（如路由器）。")]),_._v(" "),v("p",[_._v("拥塞控制通过监测网络中的拥塞状态来调整发送速率。当网络中发生拥塞时，路由器会发送拥塞通知给发送方，告知其减少数据发送速率。发送方接收到拥塞通知后，会减少发送数据的速率以减轻网络拥塞。通过不断检测和调整发送速率，拥塞控制可以维持网络中的稳定性和公平性。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("（3）可靠传输")])])]),_._v(" "),v("p",[_._v("可靠传输是一种确保数据在通信过程中不丢失、不损坏且按正确顺序到达目标地的机制。实现可靠传输通常需要以下几个关键技术：")]),_._v(" "),v("p",[_._v("序号与确认、超时重传、滑动窗口、错误检测与纠正。")]),_._v(" "),v("h3",{attrs:{id:"_12-什么是-arp-协议-说说-arp-的工作流程以及四种典型情况。★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_12-什么是-arp-协议-说说-arp-的工作流程以及四种典型情况。★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("12. 什么是 ARP 协议？说说 ARP 的工作流程以及四种典型情况。★★★")])])]),_._v(" "),v("p",[_._v("ARP 用于将 IP 地址解析为物理 MAC 地址。每个网络设备都有一个唯一的 MAC 地址，而 IP 地址则用于在互联网上进行通信。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("ARP 的工作流程：")])])]),_._v(" "),v("p",[_._v("当一个设备需要发送数据到另一个设备时，它会首先检查自己的 ARP 缓存表。ARP 缓存表存储了 IP 地址和对应的 MAC 地址。")]),_._v(" "),v("p",[_._v("如果目标设备的 MAC 地址不在 ARP 缓存表中，发送设备将"),v("strong",[v("strong",[_._v("广播一个 ARP 请求")])]),_._v("消息到局域网上的所有设备，询问该目标 IP 地址对应的 MAC 地址。")]),_._v(" "),v("p",[_._v("接收到 ARP 请求的设备会检查自己的 IP 地址是否与请求中的目标 IP 地址匹配，如果匹配，则会回复一个 "),v("strong",[v("strong",[_._v("ARP 应答消息")])]),_._v("，将自己的 MAC 地址提供给发送设备。")]),_._v(" "),v("p",[_._v("发送设备接收到 ARP 应答后，将目标 IP 地址和对应的 MAC 地址"),v("strong",[v("strong",[_._v("添加到 ARP 缓存表中")])]),_._v("，并使用这个 MAC 地址发送数据包。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("四种典型情况：")])])]),_._v(" "),v("p",[_._v("（1）发送方是主机，接收方是本网络的主机：用 ARP 找到目的主机的 MAC 地址。")]),_._v(" "),v("p",[_._v("（2）发送方是主机，接收方是另一个网络的主机：用 ARP 找到本网络路由器的硬件地址，剩下工作交给路由器完成。")]),_._v(" "),v("p",[_._v("（3）发送方是路由器，接收方是本网络的主机：用 ARP 找到目的主机的 MAC 地址。")]),_._v(" "),v("p",[_._v("（4）发送方是路由器，接收方是另一个网络的主机：用 ARP 找到本网络路由器的硬件地址，剩下工作交给路由器完成")]),_._v(" "),v("h3",{attrs:{id:"_13-什么是滑动窗口协议和停止等待协议-有什么区别-滑动窗口协议有什么优点。★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_13-什么是滑动窗口协议和停止等待协议-有什么区别-滑动窗口协议有什么优点。★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("13. 什么是滑动窗口协议和停止等待协议，有什么区别，滑动窗口协议有什么优点。★★★")])])]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("滑动窗口协议：")])])]),_._v(" "),v("p",[_._v("发送方和接收方都维护了一个固定大小的窗口，用于控制发送和接收的数据包数量。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("停止等待协议：")])])]),_._v(" "),v("p",[_._v("发送方发送一个数据包后，就会停止发送并等待接收方的确认，只有在收到接收方的确认后，才会发送下一个数据包。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("与停止等待协议相比，滑动窗口协议具有以下区别和优点：")])])]),_._v(" "),v("p",[_._v("（1）发送窗口和接收窗口：滑动窗口协议中，发送方和接收方都维护了一个窗口。发送窗口控制着允许发送的数据包数量，而接收窗口控制着允许接收的数据包数量。发送方可以连续发送多个数据包，而不需要等待每个数据包的确认。")]),_._v(" "),v("p",[_._v("（2）流水线传输：滑动窗口协议支持流水线传输，即发送方可以一次发送多个数据包，而无需等待每个数据包的确认。"),v("strong",[v("strong",[_._v("这具有更高的传输效率和带宽利用率。")])])]),_._v(" "),v("p",[_._v("（3）窗口大小动态调整：滑动窗口协议允许动态调整发送窗口和接收窗口的大小，根据网络状况进行自适应。通过调整窗口大小，可以更好地适应网络的延迟、丢包率等变化，提高传输效率和性能。"),v("strong",[v("strong",[_._v("这具有更好的动态适应性。")])])]),_._v(" "),v("h3",{attrs:{id:"_14-为什么出现-ipv6-和-ipv4-相比有什么优点-★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14-为什么出现-ipv6-和-ipv4-相比有什么优点-★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("14. 为什么出现 IPv6，和 IPv4 相比有什么优点？★★★★")])])]),_._v(" "),v("p",[_._v("IPv6 的可以解决 IPv4 地址短缺的问题。IPv6 还增加了更多的功能和特性，改进首部的格式，快速处理 / 转发数据报，提供更高效的路由和更好的网络配置灵活性，同时还支持更多的安全特性。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("优点：")])])]),_._v(" "),v("p",[_._v("（1）大规模地址空间：IPv6 采用 128 位地址，相较于 IPv4 的 32 位地址，IPv6 的地址空间巨大到几乎无限。")]),_._v(" "),v("p",[_._v("（2）改进的性能和效率：IPv6 在头部格式和地址分配方式上进行了优化，减少了路由器和主机处理数据包的开销，提高了网络性能和传输效率。")]),_._v(" "),v("p",[_._v("（3）增强网络的安全性：IPv6 在设计时考虑了一些安全机制的加强，例如 IPSec（IP Security）协议的原生支持，提供了对数据传输的认证、加密和完整性校验，增强了网络的安全性。")]),_._v(" "),v("h3",{attrs:{id:"_15-ipv6-和-ipv4-相比-报文首部的变化-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_15-ipv6-和-ipv4-相比-报文首部的变化-★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("15. IPv6 和 IPv4 相比，报文首部的变化？★★")])])]),_._v(" "),v("p",[v("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://i-blog.csdnimg.cn/direct/826593ef23ec4525a3a77089ca6682be.png",loading:"lazy"}})]),_._v(" "),v("p",[_._v("（1）IPv6 取消了首部长度字段，因为 IPv6 首部长度固定 40 字节。")]),_._v(" "),v("p",[_._v("（2）IPv6 取消了区分服务字段，IPv6 数据报首部中的通信量类和流表号字段实现了区分服务字段的功能。")]),_._v(" "),v("p",[_._v("（3）IPv6 取消了总长度字段，改为有效载荷长度字段。这是因为 IPv6 数据报的首部长度是固定的 40B，只有后面的有效载荷长度是不变的。")]),_._v(" "),v("p",[_._v("（4）IPv6 取消了标识、标志、片偏移字段，因为这些功能已经包含在 IPv6 数据报的分片扩展首部中。")]),_._v(" "),v("p",[_._v("（5）IPv6 把生存时间 TTL 字段改成跳数限制字段，这样名称与左右更加一致。")]),_._v(" "),v("p",[_._v("（6）IPv6 取消了协议字段，改用下一个首部字段。")]),_._v(" "),v("p",[_._v("（7）IPv6 取消了首部检验和字段，加快路由器处理 IPv6 数据报的速度。")]),_._v(" "),v("p",[_._v("（8）IPv6 取消了选项字段，改用扩展首部来实现选项功能。")]),_._v(" "),v("h3",{attrs:{id:"_16-简述一下-sdn-的工作原理。★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_16-简述一下-sdn-的工作原理。★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("16. 简述一下 SDN 的工作原理。★★★★")])])]),_._v(" "),v("p",[_._v("SDN 通过将网络的控制平面与数据平面分离，并将网络控制逻辑集中到一个中心化的控制器中来实现网络的灵活性和可编程性。")]),_._v(" "),v("p",[_._v("传统的网络架构中，网络设备（如路由器）负责同时处理数据转发和网络控制功能。而在 SDN 中，网络设备仅负责数据转发，而控制逻辑则由集中式的控制器进行管理。控制器作为网络控制平面的中心，通过与网络设备间的 OpenFlow 等协议进行交互，向网络设备下发指令来控制和管理整个网络。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("SDN 的工作原理可以简述如下：")])])]),_._v(" "),v("p",[_._v("（1）分离控制平面和数据平面：SDN 将网络设备的控制功能从设备本身分离出来，在控制器上进行集中管理和配置。这样可以实现控制逻辑的灵活编程和网络策略的集中管理。")]),_._v(" "),v("p",[_._v("（2）集中式控制器：SDN 网络中的控制器作为中心节点，负责网络的全局控制和管理。控制器与网络设备之间通过标准化的协议进行通信，如 OpenFlow。控制器接收来自网络设备的状态信息，来指导数据包的转发行为。")]),_._v(" "),v("p",[_._v("（3）网络编程和应用：在 SDN 中，控制器可以通过编程接口提供给应用程序，让应用能够根据需要控制和管理网络。")]),_._v(" "),v("h3",{attrs:{id:"_17-简述一下-tcp-和-udp-的区别。★★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_17-简述一下-tcp-和-udp-的区别。★★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("17. 简述一下 TCP 和 UDP 的区别。★★★★★")])])]),_._v(" "),v("p",[v("strong",[_._v("（1）连接性")])]),_._v(" "),v("p",[_._v("TCP 是面向连接的协议，它在通信之前需要建立一个可靠的"),v("strong",[v("strong",[_._v("双向连接")])]),_._v("，然后再进行数据传输。")]),_._v(" "),v("p",[_._v("UDP 是无连接的协议，它不需要在通信之前建立连接，直接将数据包发送出去。")]),_._v(" "),v("p",[v("strong",[_._v("（2）")]),_._v(" "),v("strong",[v("strong",[_._v("可靠性")])])]),_._v(" "),v("p",[_._v("TCP 提供可靠的数据传输，通过确认机制、重传机制和数据校验等方式来确保数据的完整性和正确性。如果数据包丢失或损坏，TCP 会自动重新发送。")]),_._v(" "),v("p",[_._v("UDP 不提供可靠性保证，它只是简单地将数据包发送出去，不进行确认、重传或校验。如果数据包丢失或损坏，UDP 也不会重新发送，因此可能会导致丢失部分数据。")]),_._v(" "),v("p",[v("strong",[_._v("（3）")]),_._v(" "),v("strong",[v("strong",[_._v("速度和效率")])])]),_._v(" "),v("p",[_._v("TCP 对数据传输进行了较多的控制和管理，包括流量控制、拥塞控制和差错检测等。这些额外的机制会增加延迟和网络开销，使得 TCP 的传输速度相对较慢。")]),_._v(" "),v("p",[_._v("UDP 没有这些额外的控制机制，使得它的传输速度更快、延迟更低。它适合用于实时性要求较高的应用，如音视频流媒体。")]),_._v(" "),v("p",[_._v("**（4）**"),v("strong",[v("strong",[_._v("数据完整性")])])]),_._v(" "),v("p",[_._v("TCP 保证数据的可靠性和完整性，它会对数据进行序号标记、校验和重传等操作，确保数据包按正确的顺序到达目的地。")]),_._v(" "),v("p",[_._v("UDP 不提供数据的完整性保证，数据包可能会在传输过程中丢失、重复或乱序。因此，如果应用程序需要保证数据的完整性，需要自行实现相关机制。")]),_._v(" "),v("p",[v("strong",[_._v("（5）"),v("strong",[_._v("报文格式")])])]),_._v(" "),v("p",[_._v("TCP 的首部开销大，首部最小 20 字节，最大 60 字节。")]),_._v(" "),v("p",[_._v("UDP 的首部开销小，只有 8 字节。")]),_._v(" "),v("h3",{attrs:{id:"_18-tcp-的机制是什么-★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_18-tcp-的机制是什么-★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("18. TCP 的机制是什么？★★★★")])])]),_._v(" "),v("p",[_._v("（1）三次握手：在建立连接时，客户端和服务器之间进行三次握手来确认彼此的可靠性和同步序列号。握手过程中包含 SYN（同步）和 ACK（确认）标志。")]),_._v(" "),v("p",[_._v("（2）可靠数据传输：TCP 使用序列号对发送的数据进行标记，并通过确认应答机制来确保数据的正确传输。如果发送方没有收到确认应答或者发生超时，会重新发送数据。")]),_._v(" "),v("p",[_._v("（3）流量控制：TCP 通过滑动窗口机制来控制发送方的数据发送速率，防止接收方被淹没。接收方通过通告窗口大小来告知发送方自己的可接收能力。")]),_._v(" "),v("p",[_._v("（4）拥塞控制：TCP 通过拥塞窗口和拥塞避免算法来检测网络的拥塞程度，并动态调整发送速率，以避免网络拥塞的发生。")]),_._v(" "),v("p",[_._v("（5）四次挥手：在关闭连接时，客户端和服务器之间进行四次挥手来正常关闭连接，释放资源。挥手过程中包含 FIN（结束）和 ACK（确认）标志。")]),_._v(" "),v("h3",{attrs:{id:"_19-详细说说-tcp-的拥塞控制-★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_19-详细说说-tcp-的拥塞控制-★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("19. 详细说说 TCP 的拥塞控制？★★★")])])]),_._v(" "),v("p",[_._v("TCP 阻塞控制的基本原理是通过监测网络的拥塞情况和调整发送速率来实现。当网络出现拥塞时，数据包的丢失率和延迟会增加，为了避免进一步加重网络负载，TCP 会降低发送数据的速率。")]),_._v(" "),v("p",[_._v("以下是 TCP 阻塞控制的主要机制：")]),_._v(" "),v("p",[_._v("（1）慢启动：在 TCP 连接建立后，发送方初始将拥塞窗口设置为一个较小的值（通常为 1 个 MSS），然后每经过一个往返时间（RTT），拥塞窗口就会加倍。这种机制使得发送方在开始时以较慢的速度逐渐增加发送的数据量，以便观察网络状况。")]),_._v(" "),v("p",[_._v("（2）拥塞避免：慢启动阶段过后，发送方会进入拥塞避免阶段。此时，拥塞窗口的增长速率变为线性增加，即每经过一个 RTT，拥塞窗口只增加一个 MSS。通过缓慢增加发送速率，TCP 可以更好地探测到网络的容量，并避免过度拥塞。")]),_._v(" "),v("p",[_._v("（3）快速重传：当发送方连续收到 3 个重复的确认应答时，它会认为某个数据包丢失，并立即进行重传，而不必等待超时。这可以提前恢复丢失的数据包，减少重传带来的延迟。")]),_._v(" "),v("p",[_._v("（4）快速恢复：在快速重传后，发送方将进入快速恢复状态。此时，发送方会将拥塞窗口减半，并逐渐增加拥塞窗口的大小。这样做是为了降低发送速率，减少网络负载，同时也允许接收方继续接收数据。")]),_._v(" "),v("h3",{attrs:{id:"_20-建立-tcp-连接为什么要三次握手-而不是不两次握手-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_20-建立-tcp-连接为什么要三次握手-而不是不两次握手-★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("20. 建立 TCP 连接为什么要三次握手，而不是不两次握手？★★")])])]),_._v(" "),v("p",[_._v("TCP 客户进程发出一个 TCP 连接报文段，但该报文段在某些网络节点长时间滞留，必然引起该报文段的超时重传。假设重传的报文段被 TCP 服务器进程正常接收，TCP 服务器进程给 TCP 客户进程发送一个 TCP 请求确认报文段，进入已连接状态；进行数据传输和释放连接后再过一段时间，之前滞留在网络中失效的 TCP 连接请求报文段到达了 TCP 服务器进程，TCP 服务器进程又发起一个 TCP 连接请求，而 TCP 客户进程处于关闭状态，因此不理会该报文段，而 TCP 服务器进程一直等待主机的资源。")]),_._v(" "),v("h3",{attrs:{id:"_21-流量控制引发的死锁-怎么避免死锁的发生-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_21-流量控制引发的死锁-怎么避免死锁的发生-★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("21. 流量控制引发的死锁？怎么避免死锁的发生？★★")])])]),_._v(" "),v("p",[_._v("当发送者收到了一个窗口为 0 的应答，发送者便停止发送，等待接收者的下一个应答。但是如果这个窗口不为 0 的应答在传输过程丢失，发送者一直等待下去，而接收者以为发送者已经收到该应答，等待接收新数据，这样双方就相互等待，从而产生死锁。")]),_._v(" "),v("p",[_._v("为了避免流量控制引发的死锁，TCP 使用了持续计时器。每当发送者收到一个零窗口的应答后就启动该计时器。时间一到便主动发送报文询问接收者的窗口大小。若接收者仍然返回零窗口，则重置该计时器继续等待；若窗口不为 0，则表示应答报文丢失了，此时重置发送窗口后开始发送，这样就避免了死锁的产生")]),_._v(" "),v("h3",{attrs:{id:"_22-dns-域名解析的过程-★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_22-dns-域名解析的过程-★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("22. DNS 域名解析的过程？★★★")])])]),_._v(" "),v("p",[_._v("DNS 域名解析是将域名转换 IP。")]),_._v(" "),v("p",[_._v("（1）本地计算机的缓存查询：当用户在浏览器中输入一个域名时，首先会在本地计算机的缓存中进行查询。如果之前已经查询过该域名且缓存未过期，就可以直接获取到 IP 地址，跳过后续步骤。")]),_._v(" "),v("p",[_._v("（2）本地域名服务器查询： 如果本地缓存中没有相关的域名记录，本地计算机会向配置的本地域名服务器发送查询请求。")]),_._v(" "),v("p",[_._v("（3）进行迭代或递归查询： 如果本地域名服务器也没有该域名的缓存记录，它将充当客户端，向根域名服务器发出递归查询请求，询问根域名服务器该域名对应的顶级域名服务器的 IP 地址。进行迭代或递归查询，根域名服务器 -> 顶级域名服务器 -> 权限域名服务器。")]),_._v(" "),v("h3",{attrs:{id:"_23-dhcp-的作用和工作原理。★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_23-dhcp-的作用和工作原理。★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("23. DHCP 的作用和工作原理。★★★")])])]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("作用：")])])]),_._v(" "),v("p",[_._v("DHCP 是一种基于 UDP 的网络协议，用于动态分配 IP 地址和其他网络配置信息给计算机设备。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("工作原理：")])])]),_._v(" "),v("p",[_._v("DHCP 服务器发现：当计算机设备加入网络或重新启动时，它会广播一个 DHCP 发现消息，以寻找可用的 DHCP 服务器。")]),_._v(" "),v("p",[_._v("DHCP 服务器提供：当有 DHCP 服务器收到 DHCP 发现消息后，它会回复一个 DHCP 提供消息，其中包含了可用的 IP 地址、子网掩码、网关、DNS 服务器等网络配置信息。")]),_._v(" "),v("p",[_._v("DHCP 请求：计算机设备收到 DHCP 提供消息后，会选择一份提供中的 IP 地址配置，并向相应的 DHCP 服务器发送 DHCP 请求消息，请求获取该 IP 地址。")]),_._v(" "),v("p",[_._v("DHCP 确认：DHCP 服务器接收到 DHCP 请求消息后，会向设备发送 DHCP 确认消息，确认分配给设备的 IP 地址和其他网络配置信息。")]),_._v(" "),v("p",[_._v("IP 地址续约：设备在租用 IP 地址的过程中，会周期性地向 DHCP 服务器发送续约请求，以延长 IP 地址的有效期。")]),_._v(" "),v("p",[_._v("IP 地址回收：当设备不再需要 IP 地址或断开与网络的连接时，它会发送 DHCP 释放消息，通知 DHCP 服务器回收该 IP 地址。")]),_._v(" "),v("h3",{attrs:{id:"_24-为什么有-mac-地址还需要-ip-地址-★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_24-为什么有-mac-地址还需要-ip-地址-★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("24. 为什么有 MAC 地址还需要 IP 地址？★★")])])]),_._v(" "),v("p",[_._v("（1）各式各样的网络使用不同的硬件地址，IP 地址的作用是屏蔽异构网路的差异，使得不同网络之间的设备可以进行信息交互。")]),_._v(" "),v("p",[_._v("（2）IP 地址的本质是终点地址，它在跳过路由器的时候不会改变，而 MAC 地址则是下一跳的地址，每一次经过一个路由器都会改变。")]),_._v(" "),v("p",[_._v("（3）分别用 MAC 地址和 IP 地址表示物理地址和逻辑地址方便网络分层，使得网络层和数据链路层的协议可以更灵活地替换。")]),_._v(" "),v("h3",{attrs:{id:"_25-在-tcp-拥塞控制中-什么是慢开始-拥塞避免-快重传和快恢复算法-★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_25-在-tcp-拥塞控制中-什么是慢开始-拥塞避免-快重传和快恢复算法-★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("25. 在 TCP 拥塞控制中，什么是慢开始，拥塞避免，快重传和快恢复算法？★★★")])])]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("慢开始和拥塞避免：")])])]),_._v(" "),v("p",[_._v("发送方会维持一个拥塞窗口，刚开始拥塞窗口和发送窗口大小相同，初值为 1。每次收到一个确认，就让拥塞窗口大小变为原来的两倍，并以此类推，形成指数增大。而当窗口值等于慢开始门限值时，就会执行拥塞避免，窗口值每次加 1，形成加法增大。若此时出现网络拥塞，则将拥塞窗口值重新设置为 1，并且修改门限值为发生网络拥塞时的拥塞窗口值的一半；")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("快重传和快恢复：")])])]),_._v(" "),v("p",[_._v("当发送方收到三个连续确认时，发送方执行乘法减小策略，将拥塞窗口设置为当前的一半，同时对接收方请求的帧执行快重传算法立刻进行重传而不是等待超时，并且直接执行快恢复算法，即进入拥塞避免状态，采取加法增大每次将拥塞窗口大小 + 1。")]),_._v(" "),v("h3",{attrs:{id:"_26-什么叫做-http-无状态-为什么要无状态-如何让它有状态-★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_26-什么叫做-http-无状态-为什么要无状态-如何让它有状态-★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("26. 什么叫做 HTTP 无状态，为什么要无状态，如何让它有状态？★★★")])])]),_._v(" "),v("p",[_._v("HTTP 被称为无状态协议，是因为它本身不会保存任何关于客户端之前请求的状态信息。")]),_._v(" "),v("p",[_._v("无状态的特点意味着每个 HTTP 请求都是独立的，服务器不会记住之前的请求信息。每次请求都需要携带完整的请求信息，服务器接收请求后进行处理并返回响应，然后与客户端断开连接。下次请求时，服务器不会知道这是同一个客户端的请求，也不会知道之前的请求的状态。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("HTTP 设计为无状态的主要原因：")])])]),_._v(" "),v("p",[_._v("可扩展性：无状态使得服务器不需要为每个客户端维护状态信息，可以处理大量的并发请求。如果有状态可能会增加服务器负担。")]),_._v(" "),v("p",[_._v("简化：无状态使得请求和响应之间的交互相对简单，提高了协议的灵活性。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("虽然 HTTP 默认是无状态的，但有时候需要保持会话状态。常见的实现方式有：")])])]),_._v(" "),v("p",[_._v("使用 Cookie：服务器可以在响应中设置一个包含会话标识符的 Cookie，客户端收到后保存起来，并在后续的请求中将 Cookie 发送给服务器，以此来识别和保持会话状态。")]),_._v(" "),v("h3",{attrs:{id:"_27-简述-http-和-https-的区别。★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_27-简述-http-和-https-的区别。★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("27. 简述 HTTP 和 HTTPS 的区别。★★★★")])])]),_._v(" "),v("p",[_._v("HTTPS 是基于 HTTP 的加密传输协议，使用 SSL 或 TLS 协议对 HTTP 进行加密，使得传输过程更加安全可靠。过使用公钥加密和私钥解密的方式，对客户端和服务器之间的通信进行加密保护，使得第三方无法轻易获取和篡改传输的数据。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("主要区别如下：")])])]),_._v(" "),v("p",[_._v("（1）安全性：HTTP 不进行数据加密，数据以明文形式传输，容易被拦截、窃取和篡改；而 HTTPS 通过加密技术对数据进行加密，通信过程更加安全。")]),_._v(" "),v("p",[_._v("（2）协议端口：HTTP 默认使用 80 端口进行通信，而 HTTPS 默认使用 443 端口进行通信。")]),_._v(" "),v("p",[_._v("（3）证书认证：HTTPS 使用数字证书来验证网站的身份，确保通信的安全性和可信度，防止中间人攻击等安全问题；而 HTTP 不需要进行证书认证。")]),_._v(" "),v("p",[_._v("（4）网络性能：由于 HTTPS 需要进行数据加密和解密操作，相比 HTTP 会增加一定的计算和传输开销，因此可能会稍微降低网络性能。")]),_._v(" "),v("p",[v("strong",[v("strong",[_._v("应用场景：")])])]),_._v(" "),v("p",[_._v("HTTPS 通过加密技术保护了通信过程中的数据安全，适用于对数据安全性要求较高的场景，例如"),v("strong",[v("strong",[_._v("在线支付、用户登录")])]),_._v("等；")]),_._v(" "),v("p",[_._v("而 HTTP 适用于一些对数据安全性要求不高的场景，例如"),v("strong",[v("strong",[_._v("普通的网页浏览")])]),_._v("。")]),_._v(" "),v("h3",{attrs:{id:"_28-在浏览器里输入一个网址-会发生什么-★★★★"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_28-在浏览器里输入一个网址-会发生什么-★★★★"}},[_._v("#")]),_._v(" "),v("strong",[v("strong",[_._v("28. 在浏览器里输入一个网址，会发生什么？★★★★")])])]),_._v(" "),v("p",[_._v("（1）对输入的网址进行域名解析")]),_._v(" "),v("p",[_._v("（2）通过三次握手的方式建立 TCP 连接")]),_._v(" "),v("p",[_._v("（3）建立 TCP 链接之后发起 HTTP 请求；")]),_._v(" "),v("p",[_._v("（4）服务器接收并且响应 HTTP 请求；")]),_._v(" "),v("p",[_._v("（5）浏览器解析 HTML 代码，并且请求 HTML 代码中的其他资源；")]),_._v(" "),v("p",[_._v("（6）通过四次挥手断开 TCP 连接；")]),_._v(" "),v("p",[_._v("（7）浏览器对页面进行渲染并且呈现给用户。")]),_._v(" "),v("p",[_._v("原文链接："),v("a",{attrs:{href:"https://blog.csdn.net/m0_53140426/article/details/140250817",target:"_blank",rel:"noopener noreferrer"}},[_._v("计算机保研/考研面试题——计算机网络篇_计算机保研面试真题-CSDN博客"),v("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=r.exports}}]);